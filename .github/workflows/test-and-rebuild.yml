name: "Build and Test"

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  analyse:
    name: Analyse
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Test
        run: yarn ci

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-android:
    name: Build Android
    needs: analyse
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '19'

      - name: Restore cache gradle cache
        id: cache-gradle-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/settings.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Downloading Gradle Dependencies
        if: steps.cache-gradle-cache.outputs.cache-hit != 'true'
        run: |
          cd example/android
          chmod +x gradlew
          ./gradlew --max-workers 2 downloadDependencies

      - name: Build Android Release
        run: |
          cd example
          yarn detox build -c android.emu.release

      - name: Test Android Release
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          avd-name: TestingAVD
          script: cd example && yarn detox test -c android.emu.release -l info --headless

  build-ios:
    name: Build iOS
    needs: analyse
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: setup-cocoapods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: example/ios/Podfile.lock

      - name: Restore cache Pods
        id: cache-pods
        uses: actions/cache@v4
        with:
          path: |
            **/vendor/bundle
            **/ios/Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-cocoapods-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Podfile.lock') }}
            ${{ runner.os }}-cocoapods-${{ hashFiles('**/Gemfile.lock') }}-

      - name: Install Bundle
        if: steps.cache-pods.outputs.cache-hit != 'true'
        run: |
          cd example
          bundle install


      - name: Install CocoaPods
        run: |
          cd example
          cd ios && bundle exec pod install
        env:
          RCT_NEW_ARCH_ENABLED: 0

      - name: Install Detox dependencies
        run: |
          cd example
          brew tap wix/brew
          brew install applesimutils
          yarn detox clean-framework-cache
          yarn detox build-framework-cache

      - name: Xcode Version
        run: |
          xcodebuild -version
          xcrun simctl list

      - name: Build iOS Release
        run: |
          cd example
          yarn detox build -c ios.sim.release

      - name: Test iOS Release
        run: |
          cd example
          yarn detox test -c ios.sim.release -l info -u --headless