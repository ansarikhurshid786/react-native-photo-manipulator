/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNPhotoManipulatorSpec.h"


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_batch(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "batch", @selector(batch:operations:cropRegion:targetSize:quality:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_crop(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "crop", @selector(crop:cropRegion:targetSize:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_flipImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "flipImage", @selector(flipImage:mode:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_rotateImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "rotateImage", @selector(rotateImage:mode:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_overlayImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "overlayImage", @selector(overlayImage:overlay:position:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_printText(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "printText", @selector(printText:texts:mimeType:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRNPhotoManipulatorSpecJSI_optimize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "optimize", @selector(optimize:quality:resolve:reject:), args, count);
    }

  NativeRNPhotoManipulatorSpecJSI::NativeRNPhotoManipulatorSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["batch"] = MethodMetadata {6, __hostFunction_NativeRNPhotoManipulatorSpecJSI_batch};
        
        
        methodMap_["crop"] = MethodMetadata {4, __hostFunction_NativeRNPhotoManipulatorSpecJSI_crop};
        
        
        methodMap_["flipImage"] = MethodMetadata {3, __hostFunction_NativeRNPhotoManipulatorSpecJSI_flipImage};
        
        
        methodMap_["rotateImage"] = MethodMetadata {3, __hostFunction_NativeRNPhotoManipulatorSpecJSI_rotateImage};
        
        
        methodMap_["overlayImage"] = MethodMetadata {4, __hostFunction_NativeRNPhotoManipulatorSpecJSI_overlayImage};
        
        
        methodMap_["printText"] = MethodMetadata {3, __hostFunction_NativeRNPhotoManipulatorSpecJSI_printText};
        
        
        methodMap_["optimize"] = MethodMetadata {2, __hostFunction_NativeRNPhotoManipulatorSpecJSI_optimize};
        
  }
} // namespace facebook::react
